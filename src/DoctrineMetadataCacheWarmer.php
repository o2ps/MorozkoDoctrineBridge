<?php

declare(strict_types = 1);

namespace Oops\MorozkoDoctrineBridge;

use Doctrine\Common\Persistence\ManagerRegistry;
use Doctrine\Common\Proxy\AbstractProxyFactory;
use Doctrine\ORM\EntityManager;
use Oops\Morozko\CacheWarmer;
use Oops\Morozko\CacheWarmupFailedException;


/**
 * @see https://github.com/symfony/symfony/blob/master/src/Symfony/Bridge/Doctrine/CacheWarmer/ProxyCacheWarmer.php
 */
final class DoctrineMetadataCacheWarmer implements CacheWarmer
{

	/**
	 * @var ManagerRegistry
	 */
	private $registry;


	public function __construct(ManagerRegistry $registry)
	{
		$this->registry = $registry;
	}


	public function warmup(): void
	{
		foreach ($this->registry->getManagers() as $em) {
			if ( ! $em instanceof EntityManager) {
				continue;
			}

			$proxyCacheDir = $em->getConfiguration()->getProxyDir();
			if ( ! \is_dir($proxyCacheDir)) {
				if (@\mkdir($proxyCacheDir, 0777, TRUE) === FALSE) {
					throw new CacheWarmupFailedException(\sprintf('Unable to create the Doctrine Proxy directory "%s".', $proxyCacheDir));
				}

			} elseif ( ! \is_writable($proxyCacheDir)) {
				throw new CacheWarmupFailedException(\sprintf('The Doctrine Proxy directory "%s" is not writable for the current user.', $proxyCacheDir));
			}

			// if proxies are autogenerated, we don't need to generate them
			if ($em->getConfiguration()->getAutoGenerateProxyClasses() > AbstractProxyFactory::AUTOGENERATE_NEVER) {
				continue;
			}

			$classes = $em->getMetadataFactory()->getAllMetadata();
			$em->getProxyFactory()->generateProxyClasses($classes);
		}
	}

}
